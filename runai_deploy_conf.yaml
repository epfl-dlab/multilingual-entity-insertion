apiVersion: run.ai/v1
kind: RunaiJob
metadata:
  name: $EXP_NAME # e.g. build-pod
  labels:
    user: tsoares # GASPAR_NAME
    # priorityClassName: "build" # for interactive build job, remove line for training job

spec:
  template:
    metadata:
      labels:
        user: tomas.soaresdecarvalhofeith # saibo.geng User i.e. firstname.lastname
    spec:
      hostIPC: true
      securityContext:
        runAsUser: 243553 # connect to dlab server and  run `id -u`
        runAsGroup: 60220 # connect to dlab server and  run `id -g`, should be 60220 for dlab users
        fsGroup: 0
      nodeSelector:
        run.ai/type: $NODE_TYPE # [S8|G9|G10]  "S8" (CPU only), "G9" (Nvidia V100) or "G10" (Nvidia A100)
      restartPolicy: Never
      schedulerName: runai-scheduler
      volumes: # define shared volume for container
        - name: volume1
          persistentVolumeClaim:
            claimName: runai-dlab-tsoares-dlabdata1 # name of the pvc for the lab e.g. runai-dlab-{name}-dlabdata1
      containers: # define container
      - name: build-pod # e.g. build-pod
        image: $IMAGE #ic-registry.epfl.ch/dlab/geng/llama:stable # target image
        command: ["/bin/bash", "-c"]
        args:
          # - sleep $SLEEP_TIME; # the container will stay alive for 24 hours
          # - cd /dlabdata1/tsoares/linkrec-llms/data_modelling/training/; export INPUT_SIZE=$INPUT_SIZE; export NUM_EPOCHS=$NUM_EPOCHS; export MODEL_NAME=$MODEL_NAME; export MODEL_ARCHITECTURE=$MODEL_ARCHITECTURE; export BATCH_SIZE=$BATCH_SIZE; export LANGUAGE=$LANGUAGE; export MODE=$MODE; source $BASH_FILE;
          - cd /dlabdata1/tsoares/linkrec-llms/data_modelling/benchmark_multilingual; export LANGUAGE=$LANGUAGE; source benchmark_model.sh;
        resources:
          limits:
            nvidia.com/gpu:  $NUM_GPUS
          requests:
            cpu:             $NUM_CPUS
            memory:          $MEMORY # the following represent roughly the same value: 128974848, 129e6, 129M, 123Mi, 0.120G,
            nvidia.com/gpu:  $NUM_GPUS
        env: # define environment variables in the container
          - name: ENV_NAME1
            value: XXX # for demonstration purposes, replace with your own
        volumeMounts:
          - mountPath: /dlabdata1 # path to shared volume of name VOLUME_NAME1
            name: volume1
